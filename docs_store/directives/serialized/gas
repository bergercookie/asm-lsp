[{"name":"cfi_escape","alt_names":["CFI_ESCAPE"],"signatures":[".cfi_escape *expression[, ...]*"],"description":"Allows the user to add arbitrary bytes to the unwind info. One might use this to add OS-specific CFI opcodes, or generic CFI opcodes that GAS does not yet support.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"symver","alt_names":["SYMVER"],"signatures":[".symver *name, name2@nodename[ ,visibility]*",".symver *name, name2@nodename*",".symver *name, name2@@@nodename*"],"description":"Use the `.symver` directive to bind symbols to specific version nodes within a source file. This is only supported on ELF platforms, and is typically used when assembling files to be linked into a shared library.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Symver.html","assembler":"Gas"},{"name":"error","alt_names":["ERROR"],"signatures":[".error *\"string\""],"description":"Similarly to `.err`, this directive emits an error, but you can specify a string that will be emitted as the error message.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Error.html","assembler":"Gas"},{"name":"exitm","alt_names":["EXITM"],"signatures":[".exitm"],"description":"Exit early from the current macro definition.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Macro.html","assembler":"Gas"},{"name":"sbttl","alt_names":["SBTTL"],"signatures":[".sbttl *\"subheading\"*"],"description":"Use *subheading* as the title (third line, immediately after the title line) when generating assembly listings.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Sbttl.html","assembler":"Gas"},{"name":"int","alt_names":["INT"],"signatures":[".int *expressions*"],"description":"Expect zero or more expressions, of any section, separated by commas. For each expression, emit a number that, at run time, is the value of that expression.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Int.html","assembler":"Gas"},{"name":"space","alt_names":["SPACE"],"signatures":[".space *size [,fill]*"],"description":"This directive emits *size* bytes, each of value *fill*. Both *size* and *fill* are absolute expressions. If the comma and *fill* are omitted, *fill* is assumed to be zero. This is the same as '`.skip`'.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Space.html","assembler":"Gas"},{"name":"string16","alt_names":["STRING16"],"signatures":[".string16* *\"str\""],"description":"Copy the characters in *str* to the object file. Each 8-bit character from str is copied and expanded to 16 bits.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/String.html","assembler":"Gas"},{"name":"func","alt_names":["FUNC"],"signatures":[".func *name[, label]*"],"description":"`.func` emits debugging information to denote function name, and is ignored unless the file is assembled with debugging enabled.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Func.html","assembler":"Gas"},{"name":"ident","alt_names":["IDENT"],"signatures":[".ident"],"description":"This directive is used by some assemblers to place tags in object files.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Ident.html","assembler":"Gas"},{"name":"lcomm","alt_names":["LCOMM"],"signatures":[".lcomm *symbol , length*"],"description":"Reserve *length* (an absolute expression) bytes for a local common denoted by *symbol*. The section and value of *symbol* are those of the new local common.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Lcomm.html","assembler":"Gas"},{"name":"data","alt_names":["DATA"],"signatures":[".data *subsection*"],"description":"`.data` tells as to assemble the following statements onto the end of the data subsection numbered *subsection* (which is an absolute expression). If *subsection* is omitted, it defaults to zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Data.html","assembler":"Gas"},{"name":"eject","alt_names":["EJECT"],"signatures":[".eject"],"description":"Force a page break at this point, when generating assembly listings.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Eject.html","assembler":"Gas"},{"name":"float","alt_names":["FLOAT"],"signatures":[".float *flonums*"],"description":"This directive assembles zero or more flonums, separated by commas.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Float.html","assembler":"Gas"},{"name":"irpc","alt_names":["IRPC"],"signatures":[".irpc *symbol,values...*"],"description":"Evaluate a sequence of statements assigning different values to *symbol*. The sequence of statements starts at the `.irpc` directive, and is terminated by an `.endr` directive. For each character in *value, symbol* is set to the character, and the sequence of statements is assembled.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Irpc.html","assembler":"Gas"},{"name":"single","alt_names":["SINGLE"],"signatures":[".single *filename*"],"description":"This directive assembles zero or more flonums, separated by commas. It has the same effect as `.float`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Single.html","assembler":"Gas"},{"name":"attach_to_group","alt_names":["ATTACH_TO_GROUP"],"signatures":[".attach_to_group *name*"],"description":"Attaches the current section to the named group.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Attach_005fto_005fgroup.html","assembler":"Gas"},{"name":"endef","alt_names":["ENDEF"],"signatures":[".endef"],"description":"This directive flags the end of a symbol definition begun with `.def`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Endef.html","assembler":"Gas"},{"name":"dcb","alt_names":["DCB"],"signatures":[".dcb*[size] number [,fill]*"],"description":"This directive emits number copies of *fill*, each of size bytes.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Dcb.html","assembler":"Gas"},{"name":"cfi_window_save","alt_names":["CFI_WINDOW_SAVE"],"signatures":[".cfi_window_save"],"description":"SPARC register window has been saved.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"ds","alt_names":["DS"],"signatures":[".ds*[size] number [,fill]*"],"description":"This directive emits *number* copies of *fill*, each of *size* bytes.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Ds.html","assembler":"Gas"},{"name":"desc","alt_names":["DESC"],"signatures":[".desc *symbol, abs-expression*"],"description":"This directive sets the descriptor of the symbol (see Symbol Attributes) to the low 16 bits of an absolute expression.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Desc.html","assembler":"Gas"},{"name":"local","alt_names":["LOCAL"],"signatures":[".local *names*"],"description":"This directive, which is available for ELF targets, marks each symbol in the comma-separated list of *names* as a local symbol so that it will not be externally visible. If the symbols do not already exist, they will be created.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Local.html","assembler":"Gas"},{"name":"sleb128","alt_names":["SLEB128"],"signatures":[".sleb128 *expressions*"],"description":"*sleb128* stands for \"signed little endian base 128.\" This is a compact, variable length representation of numbers used by the DWARF symbolic debugging format.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Sleb128.html","assembler":"Gas"},{"name":"type","alt_names":["TYPE"],"signatures":[".type *int*",".type *name , type_description*"],"description":"This directive is used to set the type of a symbol.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Type.html","assembler":"Gas"},{"name":"weak","alt_names":["WEAK"],"signatures":[".weak *names*"],"description":"This directive sets the weak attribute on the comma separated list of symbol *names*. If the symbols do not already exist, they will be created.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Weak.html","assembler":"Gas"},{"name":"cfi_fde_data","alt_names":["CFI_FDE_DATA"],"signatures":[".cfi_fde_data *[opcode1 [, ...]]*"],"description":"`.cfi_fde_data` is used to describe the compact unwind opcodes to be used for the current function.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"vtable_entry","alt_names":["VTABLE_ENTRY"],"signatures":[".vtable_entry *table, offset*"],"description":"This directive finds or creates a symbol table and creates a `VTABLE_ENTRY` relocation for it with an addend of `offset`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/VTableEntry.html","assembler":"Gas"},{"name":"double","alt_names":["DOUBLE"],"signatures":[".double *flonums*"],"description":"`.double` expects zero or more *flonums*, separated by commas. It assembles floating point numbers.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Double.html","assembler":"Gas"},{"name":"cfi_personality_id","alt_names":["CFI_PERSONALITY_ID"],"signatures":[".cfi_personality_id *id*"],"description":"`.cfi_personality_id` defines a personality routine by its index as defined in a compact unwinding format.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"ifle","alt_names":["IFLE"],"signatures":[".ifle *absolute expression*"],"description":"Assembles the following section of code if the argument is less than or equal to zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"elseif","alt_names":["ELSEIF"],"signatures":[".elseif"],"description":"`.elseif` is part of the as support for conditional assembly; see `.if`. It is shorthand for beginning a new `.if` block that would otherwise fill the entire `.else` section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Elseif.html","assembler":"Gas"},{"name":"previous","alt_names":["PREVIOUS"],"signatures":[".previous"],"description":"This ELF section stack manipulation directive swaps the current section (and subsection) with most recently referenced section/subsection pair prior to this one. Multiple .previous directives in a row will flip between two sections (and their subsections).","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Previous.html","assembler":"Gas"},{"name":"endm","alt_names":["ENDM"],"signatures":[".endm"],"description":"Mark the end of a macro definition.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Macro.html","assembler":"Gas"},{"name":"protected","alt_names":["PROTECTED"],"signatures":[".protected *names*"],"description":"This ELF visibility directive overrides the named symbols default visibility (which is set by their binding: local, global or weak). The directive sets the visibility to protected which means that any references to the symbols from within the components that defines them must be resolved to the definition in that component, even if a definition in another component would normally preempt this.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Protected.html","assembler":"Gas"},{"name":"version","alt_names":["VERSION"],"signatures":[".version *\"string\"*"],"description":"This directive creates a `.note` section and places into it an ELF formatted note of type NT_VERSION. The note’s name is set to string.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Version.html","assembler":"Gas"},{"name":"list","alt_names":["LIST"],"signatures":[".list"],"description":"Control (in conjunction with the `.nolist` directive) whether or not assembly listings are generated. These two directives maintain an internal counter (which is zero initially). `.list` increments the counter, and `.nolist` decrements it. Assembly listings are generated whenever the counter is greater than zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/List.html","assembler":"Gas"},{"name":"else","alt_names":["ELSE"],"signatures":[".else"],"description":"`.else` is part of the as support for conditional assembly; see `.if`. It marks the beginning of a section of code to be assembled if the condition for the preceding `.if` was false.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Else.html","assembler":"Gas"},{"name":"dc","alt_names":["DC"],"signatures":[".dc*[size] expressions*"],"description":"The `.dc` directive expects zero or more expressions separated by commas. These expressions are evaluated and their values inserted into the current section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Dc.html","assembler":"Gas"},{"name":"cfi_rel_offset","alt_names":["CFI_REL_OFFSET"],"signatures":[".cfi_rel_offset *register, offset*"],"description":"Previous value of *register* is saved at offset *offset* from the current CFA register.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"ifc","alt_names":["IFC"],"signatures":[".ifc *string1,string2*"],"description":"Assembles the following section of code if the two strings are the same","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"equiv","alt_names":["EQUIV"],"signatures":[".equiv *symbol, expression*"],"description":"The `.equiv` directive is like `.equ` and `.set`, except that the assembler will signal an error if symbol is already defined.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Equiv.html","assembler":"Gas"},{"name":"nop","alt_names":["NOP"],"signatures":[".nop *[size]*"],"description":"This directive emits no-op instructions.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Nop.html","assembler":"Gas"},{"name":"p2align","alt_names":["P2ALIGN"],"signatures":[".p2align*[w1] [abs-expr[, abs-expr[, abs-expr]]]*"],"description":"Pad the location counter (in the current subsection) to a particular storage boundary.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/P2align.html","assembler":"Gas"},{"name":"scl","alt_names":["SCL"],"signatures":[".scl *class*"],"description":"Set the storage-class value for a symbol. This directive may only be used inside a `.def`/`.endef` pair.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Scl.html","assembler":"Gas"},{"name":"set","alt_names":["SET"],"signatures":[".set *symbol, expression*"],"description":"Set the value of *symbol* to *expression*. This changes *symbol*'s value and type to conform to *expression*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Set.html","assembler":"Gas"},{"name":"ifgt","alt_names":["IFGT"],"signatures":[".ifgt *absolute expression*"],"description":"Assembles the following section of code if the argument is greater than zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"weakref","alt_names":["WEAKREF"],"signatures":[".weakref *alias, target*"],"description":"This directive creates an alias to the target symbol that enables the symbol to be referenced with weak-symbol semantics, but without actually making it weak.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Weakref.html","assembler":"Gas"},{"name":"cfi_inline_lsda","alt_names":["CFI_INLINE_LSDA"],"signatures":[".cfi_inline_lsda *[align]*"],"description":"`.cfi_inline_lsda` marks the start of a LSDA data section and switches to the corresponding `.gnu.extab` section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"macro","alt_names":["MACRO"],"signatures":[".macro*",".macro *macname*",".macro *macname macargs ...*"],"description":"The commands `.macro` and `.endm` allow you to define macros that generate assembly output.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Macro.html","assembler":"Gas"},{"name":"globl","alt_names":["GLOBL"],"signatures":[".globl *symbol*"],"description":"`.globl` makes the symbol visible to `ld`. If you define symbol in your partial program, its value is made available to other partial programs that are linked with it.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Global.html","assembler":"Gas"},{"name":"mri","alt_names":["MRI"],"signatures":[".mri *val*"],"description":"If *val* is non-zero, this tells as to enter MRI mode. If *val* is zero, this tells as to exit MRI mode. This change affects code assembled until the next `.mri` directive, or until the end of the file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/MRI.html","assembler":"Gas"},{"name":"rept","alt_names":["REPT"],"signatures":[".rept *count*"],"description":"Repeat the sequence of lines between the `.rept` directive and the next `.endr` directive *count* times.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Rept.html","assembler":"Gas"},{"name":"string","alt_names":["STRING"],"signatures":[".string *\"str\""],"description":"Copy the characters in *str* to the object file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/String.html","assembler":"Gas"},{"name":"section","alt_names":["SECTION"],"signatures":[".section *name*",".section *name[, \"flags\"]*",".section *name[, subsection]*"],"description":"Use the `.section` directive to assemble the following code into a section named *name*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Section.html","assembler":"Gas"},{"name":"ifndef","alt_names":["IFNDEF"],"signatures":[".ifndef *symbol"],"description":"Assembles the following section of code if the specified symbol has not been defined.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"fail","alt_names":["FAIL"],"signatures":[".fail *expression*"],"description":"Generates an error or a warning. If the value of the expression is 500 or more, `as` will print a warning message. If the value is less than 500, `as` will print an error message.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Fail.html","assembler":"Gas"},{"name":"print","alt_names":["PRINT"],"signatures":[".print *string*"],"description":"`as` will print *string* on the standard output during assembly. You must put string in double quotes.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Print.html","assembler":"Gas"},{"name":"size","alt_names":["SIZE"],"signatures":[".size *name, expression*",".size  *expression*"],"description":"This directive is used to set the size associated with a symbol. For ELF targets, the `.size` directive accepts two arguments. For COFF targets, the .size directive is only permitted inside `.def`/`.endef` pairs and only accepts one argument.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Size.html","assembler":"Gas"},{"name":"struct","alt_names":["STRUCT"],"signatures":[".struct *expression*"],"description":"Provides a means to associate symvolic names for offsetes. Switch to the absolute section, and set the section offset to expression, which must be an absolute expression.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Struct.html","assembler":"Gas"},{"name":"if","alt_names":["IF"],"signatures":[".if *absolute expreession*"],"description":"`.if` marks the beginning of a section of code which is only considered part of the source program being assembled if the argument (which must be an absolute expression) is non-zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"nops","alt_names":["NOPS"],"signatures":[".nops *size[, control]*"],"description":"This directive emits no-op instructions. It is specific to the Intel 80386 and AMD x86-64 targets. It takes a *size* argument and generates *size* bytes of no-op instructions. *size* must be absolute and positive.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Nops.html","assembler":"Gas"},{"name":"hword","alt_names":["HWORD"],"signatures":[".hword *expressions*"],"description":"This directive is a synonym for '`.short`'; depending on the target architecture, it may also be a synonym for '`.word`'. It expects zero or more expressions, and emits a 16 bit number for each.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/hword.html","assembler":"Gas"},{"name":"ifb","alt_names":["IFB"],"signatures":[".ifb *text*"],"description":"Assembles the following section of code if the operand is blank (empty).","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"reloc","alt_names":["RELOC"],"signatures":[".reloc *offset, reloc_name[, expression]*"],"description":"Generate a relocation at *offset* of type *reloc_name* with value *expression*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Reloc.html","assembler":"Gas"},{"name":"cfi_adjust_cfa_offset","alt_names":["CFI_ADJUST_CFA_OFFSET"],"signatures":[".cfi_adjust_cfa_offset"],"description":"Same as `.cfi_def_cfa_offset` but *offset* is a relative value that is added/subtracted from the previous offset.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_def_cfa_offset","alt_names":["CFI_DEF_CFA_OFFSET"],"signatures":[".cfi_def_cfa_offset *offset*"],"description":"`.cfi_def_cfa_offset` modifies a rule for computing CFA. Register remains the same, but offset is new.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_sections","alt_names":["CFI_SECTIONS"],"signatures":[".cfi_sections *list*"],"description":"`.cfi_sections` may be used to specify whether CFI directives should emit `.eh_frame` section, `.debug_frame` section and/or `.sframe` section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"ifnotdef","alt_names":["IFNOTDEF"],"signatures":[".ifnotdef *symbol"],"description":"Assembles the following section of code if the specified symbol has not been defined.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"cfi_def_cfa","alt_names":["CFI_DEF_CFA"],"signatures":[".cfi_def_cfa *register, offset*"],"description":"`.cfi_def_cfa` defines a rule for computing CFA as: *take address from register and add offset to it*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"irp","alt_names":["IRP"],"signatures":[".irp *symbol,values...*"],"description":"Evaluate a sequence of statements assigning different values to *symbol*. The sequence of statements starts at the `.irp` directive, and is terminated by an `.endr` directive. For each value, *symbol* is set to *value*, and the sequence of statements is assembled.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Irp.html","assembler":"Gas"},{"name":"ascii","alt_names":["ASCII"],"signatures":[".ascii \"*string*\"..."],"description":"`.ascii` expects zero or more string literals (see Strings) separated by commas. It assembles each string (with no automatic trailing zero byte) into consecutive addresses.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Ascii.html","assembler":"Gas"},{"name":"val","alt_names":["VAL"],"signatures":[".val *addr*"],"description":"This directive, permitted only within `.def`/`.endef` pairs, records the address addr as the value attribute of a symbol table entry.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Val.html","assembler":"Gas"},{"name":"endif","alt_names":["ENDIF"],"signatures":[".endif"],"description":"`.endif` is part of the as support for conditional assembly; it marks the end of a block of code that is only assembled conditionally. See `.if`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Endif.html","assembler":"Gas"},{"name":"file","alt_names":["FILE"],"signatures":[".file *string*",".file *fileno filename*"],"description":"This version of the `.file` directive tells `as` that we are about to start a new logical file. When emitting DWARF2 line number information, `.file` assigns filenames to the `.debug_line` file name table.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/File.html","assembler":"Gas"},{"name":"global","alt_names":["GLOBAL"],"signatures":[".global *symbol*"],"description":"`.global` makes the symbol visible to `ld`. If you define symbol in your partial program, its value is made available to other partial programs that are linked with it.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Global.html","assembler":"Gas"},{"name":"iflt","alt_names":["IFLT"],"signatures":[".iflt *absolute expression*"],"description":"Assembles the following section of code if the argument is less than zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"short","alt_names":["SHORT"],"signatures":[".short *expressions*"],"description":"`.short` is normally the same as '`.word`'. See `.word`. In some configurations, however, `.short` and `.word` generate numbers of different lengths.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Short.html","assembler":"Gas"},{"name":"abort","alt_names":["ABORT"],"signatures":[".abort"],"description":"This directive stops the assembly immediately.","deprecated":true,"url":"https://sourceware.org/binutils/docs-2.41/as/Abort.html","assembler":"Gas"},{"name":"\\@","alt_names":["\\@"],"signatures":[".\\@"],"description":"`as` maintains a counter of how many macros it has executed in this pseudo-variable; you can copy that number to your output with '`\\@`', but only within a macro definition.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Macro.html","assembler":"Gas"},{"name":"cfi_endproc","alt_names":["CFI_ENDPROC"],"signatures":[".cfi_endproc"],"description":"`.cfi_endproc` is used at the end of a function where it closes its unwind entry previously opened by `.cfi_startproc`, and emits it to `.eh_frame`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"noaltmacro","alt_names":["NOALTMACRO"],"signatures":[".noaltmacro"],"description":"Disable alternate macro mode. See `.altmacro`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Noaltmacro.html","assembler":"Gas"},{"name":"equ","alt_names":["EQU"],"signatures":[".equ *symbol, expression*"],"description":"This directive sets the value of symbol to expression. It is synonymous with '`.set`'; see `.set`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Equ.html","assembler":"Gas"},{"name":"cfi_undefined","alt_names":["CFI_UNDEFINED"],"signatures":[".cfi_undefined *register*"],"description":"From now on the previous value of *register* can't be restored anymore.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"altmacro","alt_names":["ALTMACRO"],"signatures":[".altmacro"],"description":"Enable alternate macro mode.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Altmacro.html","assembler":"Gas"},{"name":"quad","alt_names":["QUAD"],"signatures":[".quad *expressions*"],"description":"For 64-bit architectures, or more generally with any GAS configured to support 64-bit target virtual addresses, this is like '`.int`', but emitting 64-bit quantities. Otherwise `.quad` expects zero or more bignums, separated by commas.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Quad.html","assembler":"Gas"},{"name":"ifnb","alt_names":["IFNB"],"signatures":[".ifnb *text*"],"description":"Assembles the following section of code if the operand is non-blank (non-empty).","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"org","alt_names":["ORG"],"signatures":[".org *new-lc , fill*"],"description":"Advance the location counter of the current section to *new-lc*. *new-lc* is either an absolute expression or an expression with the same section as the current subsection.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Org.html","assembler":"Gas"},{"name":"skip","alt_names":["SKIP"],"signatures":[".skip *size [,fill]*"],"description":"This directive emits *size* bytes, each of value *fill*. Both *size* and *fill* are absolute expressions. If the comma and *fill* are omitted, *fill* is assumed to be zero. This is the same as '`.space`'.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Skip.html","assembler":"Gas"},{"name":"gnu_attribute","alt_names":["GNU_ATTRIBUTE"],"signatures":[".gnu_attribute *tag, value*"],"description":"Record a GNU object attribute for this file. See Object Attributes.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Gnu_005fattribute.html","assembler":"Gas"},{"name":"ifnes","alt_names":["IFNES"],"signatures":[".ifnes *string1,string2*"],"description":"Assembles the following section of code if the two strings are not the same.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"byte","alt_names":["BYTE"],"signatures":[".byte *expressions*"],"description":"`.byte` expects zero or more expressions, separated by commas. Each expression is assembled into the next byte.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Byte.html","assembler":"Gas"},{"name":"fill","alt_names":["FILL"],"signatures":[".fill *repeat, size, value*"],"description":"`repeat`, `size` and `value` are absolute expressions. This emits `repeat` copies of `size` bytes. `Repeat` may be zero or more. `Size` may be zero or more, but if it is more than 8, then it is deemed to have the value 8, compatible with other people's assemblers.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Fill.html","assembler":"Gas"},{"name":"nolist","alt_names":["NOLIST"],"signatures":[".nolist"],"description":"Control (in conjunction with the `.list` directive) whether or not assembly listings are generated. These two directives maintain an internal counter (which is zero initially). `.list` increments the counter, and `.nolist` decrements it. Assembly listings are generated whenever the counter is greater than zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Nolist.html","assembler":"Gas"},{"name":"internal","alt_names":["INTERNAL"],"signatures":[".internal *names*"],"description":"This is an ELF visibility directive that overrides the named symbols default visibility (which is set by their binding: local, global or weak). The directive sets the visibility to internal which means that the symbols are considered to be hidden (i.e., not visible to other components), and that some extra, processor specific processing must also be performed upon the symbols as well.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Internal.html","assembler":"Gas"},{"name":"ln","alt_names":["LN"],"signatures":[".ln *line-number*"],"description":"Change the logical line number. *line-number* must be an absolute expression. The next line has that logical line number. Therefore any other statements on the current line (after a statement separator character) are reported as on logical line number *line-number* - 1.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Ln.html","assembler":"Gas"},{"name":"loc","alt_names":["LOC"],"signatures":[".loc *fileno lineno [column] [options]"],"description":"When emitting DWARF2 line number information, the `.loc` directive will add a row to the `.debug_line` line number matrix corresponding to the immediately following assembly instruction.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Loc.html","assembler":"Gas"},{"name":"purgem","alt_names":["PURGEM"],"signatures":[".purgem *name*"],"description":"Undefine the macro *name*, so that later uses of the string will not be expanded. See `.macro`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Purgem.html","assembler":"Gas"},{"name":"string32","alt_names":["STRING32"],"signatures":[".string32* *\"str\""],"description":"Copy the characters in *str* to the object file. Each 8-bit character from str is copied and expanded to 32 bits.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/String.html","assembler":"Gas"},{"name":"ifge","alt_names":["IFGE"],"signatures":[".ifge *absolute expression*"],"description":"Assembles the following section of code if the argument is greater than or equal to zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"popsection","alt_names":["POPSECTION"],"signatures":[".popsection"],"description":"This ELF section stack manipulation directive replaces the current section (and subsection) with the top section (and subsection) on the section stack. This section is popped off the stack.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/PopSection.html","assembler":"Gas"},{"name":"subsection","alt_names":["SUBSECTION"],"signatures":[".subsection *name*"],"description":"This ELF section stack manipulation directive replaces the current subsection with *name*. The current section is not changed. The replaced subsection is put onto the section stack in place of the then current top of stack subsection.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/SubSection.html","assembler":"Gas"},{"name":"ifeqs","alt_names":["IFEQS"],"signatures":[".ifeqs *string1, string2*"],"description":"Another form of `.ifc`. The strings must be quoted using double quotes.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"uleb128","alt_names":["ULEB128"],"signatures":[".uleb128 *expressions*"],"description":"*uleb128* stands for \"unsigned little endian base 128.\" This is a compact, variable length representation of numbers used by the DWARF symbolic debugging format. See `.sleb128`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Uleb128.html","assembler":"Gas"},{"name":"vtable_inherit","alt_names":["VTABLE_INHERIT"],"signatures":[".vtable_inherit *child, parent*"],"description":"his directive finds the symbol `child` and finds or creates the symbol `parent` and then creates a `VTABLE_INHERIT` relocation for the parent whose addend is the value of the child symbol. As a special case the parent name of `0` is treated as referring to the \\*ABS\\* section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/VTableInherit.html","assembler":"Gas"},{"name":"warning","alt_names":["WARNING"],"signatures":[".warning *\"string\"*"],"description":"This directive emits a warning, but you can specify a string that will be emitted as the warning message. If you don’t specify the message, it defaults to \"`.warning` directive invoked in source file\".","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Warning.html","assembler":"Gas"},{"name":"loc_mark_labels","alt_names":["LOC_MARK_LABELS"],"signatures":[".loc_mark_labels *enable*"],"description":"When emitting DWARF2 line number information, the `.loc_mark_labels` directive makes the assembler emit an entry to the `.debug_line` line number matrix with the `basic_block` register in the state machine set whenever a code label is seen.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Loc_005fmark_005flabels.html","assembler":"Gas"},{"name":"title","alt_names":["TITLE"],"signatures":[".title *\"heading\"*"],"description":"Use *heading* as the title (second line, immediately after the source file name and pagenumber) when generating assembly listings.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Title.html","assembler":"Gas"},{"name":"cfi_val_offset","alt_names":["CFI_VAL_OFFSET"],"signatures":[".cfi_val_offset *register, offset*"],"description":"Previous value of register is CFA + *offset*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"bundle_unlock","alt_names":["BUNDLE_UNLOCK"],"signatures":[".bundle_unlock"],"description":"The `.bundle_lock` and directive `.bundle_unlock` directives allow explicit control over instruction bundle padding.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Bundle-directives.html","assembler":"Gas"},{"name":"offset","alt_names":["OFFSET"],"signatures":[".offset *loc*"],"description":"Set the location counter to *loc* in the absolute section. *loc* must be an absolute expression.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Offset.html","assembler":"Gas"},{"name":"octa","alt_names":["OCTA"],"signatures":[".octa *bignums*"],"description":"This directive expects zero or more bignums, separated by commas. For each bignum, it emits a 16-byte integer.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Octa.html","assembler":"Gas"},{"name":"def","alt_names":["DEF"],"signatures":[".def *name*"],"description":"Begin defining debugging information for a symbol *name*; the definition extends until the *.endef* directive is encountered.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Def.html","assembler":"Gas"},{"name":"ifnc","alt_names":["IFNC"],"signatures":[".ifnc *string1,string2*"],"description":"Assembles the following section of code if the two strings are not the same.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"4byte","alt_names":["4BYTE"],"signatures":[".4byte *expression [, expression]\\**"],"description":"Each expression is evaluated in turn and placed in the next four bytes of the current output section, using the endian model of the target. If an expression will not fit in four bytes, a warning message is displayed and the least significant two bytes of the expression’s value are used.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/4byte.html","assembler":"Gas"},{"name":"comm","alt_names":["COMM"],"signatures":[".comm *symbol , length*"],"description":"`.comm` declares a common symbol named *symbol*. When linking, a common symbol in one object file may be merged with a defined or common symbol of the same name in another object file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Comm.html","assembler":"Gas"},{"name":"psize","alt_names":["PSIZE"],"signatures":[".psize *lines , columns*"],"description":"Use this directive to declare the number of lines—and, optionally, the number of columns—to use for each page, when generating listings.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Psize.html","assembler":"Gas"},{"name":"cfi_val_encoded_addr","alt_names":["CFI_VAL_ENCODED_ADDR"],"signatures":[".cfi_val_encoded_addr *register, encoding, label*"],"description":"The current value of *register* is *label*. The value of *label* will be encoded in the output file according to *encoding*; see the description of `.cfi_personality` for details on this encoding.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"err","alt_names":["ERR"],"signatures":[".err"],"description":"If `as` assembles a `.err` directive, it will print an error message and, unless the `-Z` option was used, it will not generate an object file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Err.html","assembler":"Gas"},{"name":"extern","alt_names":["EXTERN"],"signatures":[".extern"],"description":"`.extern` is accepted in the source program—for compatibility with other assemblers—but it is ignored.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Extern.html","assembler":"Gas"},{"name":"stabn","alt_names":["STABN"],"signatures":[".stabn *type , other , desc , value*"],"description":"Emits symbols for use by symbolic debuggers. The name of the symbol is set to the empty string \"\".","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Stab.html","assembler":"Gas"},{"name":"hidden","alt_names":["HIDDEN"],"signatures":[".hidden *names*"],"description":"This is an ELF visibility directive that overrides the named symbols default visibility (which is set by their binding: local, global or weak). The directive sets the visibility to hidden which means that the symbols are not visible to other components","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Hidden.html","assembler":"Gas"},{"name":"include","alt_names":["INCLUDE"],"signatures":[".include \"*file*\""],"description":"This directive provides a way to include supporting files at specified points in your source program.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Include.html","assembler":"Gas"},{"name":"long","alt_names":["LONG"],"signatures":[".long *expressions*"],"description":"Expect zero or more expressions, of any section, separated by commas. For each expression, emit a number that, at run time, is the value of that expression. `.long` is the same as '`.int`'.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Long.html","assembler":"Gas"},{"name":"2byte","alt_names":["2BYTE"],"signatures":[".2byte *expression [, expression]\\**"],"description":"Each expression is evaluated in turn and placed in the next two bytes of the current output section, using the endian model of the target. If an expression will not fit in two bytes, a warning message is displayed and the least significant two bytes of the expression’s value are used.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/2byte.html","assembler":"Gas"},{"name":"ifdef","alt_names":["IFDEF"],"signatures":[".ifdef *symbol*"],"description":"Assembles the following section of code if the specified symbol has been defined.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"align","alt_names":["ALIGN"],"signatures":[".align *[abs-expr[, abs-expr[, abs-expr]]]*"],"description":"Pad the location counter (in the current subsection) to a particular storage boundary.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Align.html","assembler":"Gas"},{"name":"line","alt_names":["LINE"],"signatures":[".line *line-number*"],"description":"Change the logical line number. *line-number* must be an absolute expression. The next line has that logical line number. Therefore any other statements on the current line (after a statement separator character) are reported as on logical line number *line-number* - 1.","deprecated":true,"url":"https://sourceware.org/binutils/docs-2.41/as/Line.html","assembler":"Gas"},{"name":"dim","alt_names":["DIM"],"signatures":[".dim"],"description":"This directive is generated by compilers to include auxiliary debugging information in the symbol table. It is only permitted inside `.def/.endef` pairs.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Dim.html","assembler":"Gas"},{"name":"stabs","alt_names":["STABS"],"signatures":[".stabs *string, type , other , desc , value*"],"description":"Emits symbols for use by symbolic debuggers. All five fields are specified.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Stab.html","assembler":"Gas"},{"name":"text","alt_names":["TEXT"],"signatures":[".text *subsection*"],"description":"Tells *as* to assemble the following statements onto the end of the text subsection numbered *subsection*, which is an absolute expression. If *subsection* is omitted, subsection number zero is used.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Text.html","assembler":"Gas"},{"name":"8byte","alt_names":["8BYTE"],"signatures":[".8byte *expression [, expression]\\**"],"description":"Each expression is evaluated in turn and placed in the next eight bytes of the current output section, using the endian model of the target. If an expression will not fit in eight bytes, a warning message is displayed and the least significant two bytes of the expression’s value are used.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/8byte.html","assembler":"Gas"},{"name":"cfi_register","alt_names":["CFI_REGISTER"],"signatures":[".cfi_register *register1, register2*"],"description":"Previous value of *register1* is saved in register *register2*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_startproc","alt_names":["CFI_STARTPROC"],"signatures":[".cfi_startproc [simple]"],"description":"`.cfi_startproc` is used at the beginning of each function that should have an entry in `.eh_frame`. It initializes some internal data structures. Don't forget to close the function by `.cfi_endproc`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"stabd","alt_names":["STABD"],"signatures":[".stabd *type , other , desc*"],"description":"Emits symbols for use by symbolic debuggers. The \"name\" of the symbol generated is not even an empty string. It is a null pointer, for compatibility.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Stab.html","assembler":"Gas"},{"name":"eqv","alt_names":["EQV"],"signatures":[".eqv *symbol, epxression"],"description":"The `.eqv` directive is like `.equiv`, but no attempt is made to evaluate the expression or any part of it immediately. Instead each time the resulting symbol is used in an expression, a snapshot of its current value is taken.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Eqv.html","assembler":"Gas"},{"name":"incbin","alt_names":["INCBIN"],"signatures":[".incbin *\"file\"[,skip[,count]]*"],"description":"The `.incbin` directive includes `file` verbatim at the current location.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Incbin.html","assembler":"Gas"},{"name":"ifeq","alt_names":["IFEQ"],"signatures":[".ifeq *absolute expression*"],"description":"Assembles the following section of code if the argument is zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"tag","alt_names":["TAG"],"signatures":[".tag *structname*"],"description":"This directive is generated by compilers to include auxiliary debugging information in the symbol table. It is only permitted inside `.def`/`.endef` pairs. Tags are used to link structure definitions in the symbol table with instances of those structures.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Tag.html","assembler":"Gas"},{"name":"linkonce","alt_names":["LINKONCE"],"signatures":[".linkonce *[type]"],"description":"ark the current section so that the linker only includes a single copy of it. This may be used to include the same section in several different object files, but ensure that the linker will only include it once in the final output file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Linkonce.html","assembler":"Gas"},{"name":"end","alt_names":["END"],"signatures":[".end"],"description":"`.end` marks the end of the assembly file. `as` does not process anything in the file past the `.end` directive.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/End.html","assembler":"Gas"},{"name":"asciz","alt_names":["ASCIZ"],"signatures":[".asciz \"*string*\"..."],"description":"`.asciz` is just like `.ascii`, but each string is followed by a zero byte. The \"z\" in '`.asciz`' stands for \"zero\".","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Asciz.html","assembler":"Gas"},{"name":"string8","alt_names":["STRING8"],"signatures":[".string8* *\"str\""],"description":"Copy the characters in *str* to the object file.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/String.html","assembler":"Gas"},{"name":"zero","alt_names":["ZERO"],"signatures":[".zero *size*"],"description":"This directive emits *size* 0-valued bytes. *size* must be an absolute expression. This directive is actually an alias for the '`.skip`' directive so it can take an optional second argument of the value to store in the bytes instead of zero.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Zero.html","assembler":"Gas"},{"name":"cfi_lsda","alt_names":["CFI_LSDA"],"signatures":[".cfi_lsda *encoding [, exp]*"],"description":"`.cfi_lsda` defines LSDA and its encoding.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_signal_frame","alt_names":["CFI_SIGNAL_FRAME"],"signatures":[".cfi_signal_frame"],"description":"Mark current function as signal trampoline.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"bundle_lock","alt_names":["BUNDLE_LOCK"],"signatures":[".bundle_lock"],"description":"The `.bundle_lock` and directive `.bundle_unlock` directives allow explicit control over instruction bundle padding.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Bundle-directives.html","assembler":"Gas"},{"name":"balign","alt_names":["BALIGN"],"signatures":[".balign*[wl] [abs-expr[, abs-expr[, abs-expr]]]*"],"description":"Pad the location counter (in the current subsection) to a particular storage boundary.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Balign.html","assembler":"Gas"},{"name":"cfi_remember_state","alt_names":["CFI_REMEMBER_STATE"],"signatures":[".cfi_remember_state"],"description":"`.cfi_remember_state` pushes the set of rules for every register onto an implicit stack.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"abort (coff)","alt_names":["ABORT (COFF)"],"signatures":[".ABORT (COFF)"],"description":"When producing COFF output, `as` accepts this directive as a synonym for '`.abort`'.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/ABORT-_0028COFF_0029.html","assembler":"Gas"},{"name":"cfi_return_column","alt_names":["CFI_RETURN_COLUMN"],"signatures":[".cfi_return_column *register*"],"description":"Change return column *register*, i.e. the return address is either directly in *register* or can be accessed by rules for *register*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"bundle_align_mode","alt_names":["BUNDLE_ALIGN_MODE"],"signatures":[".bundle_align_mode *abs-expr*"],"description":"`.bundle_align_mode` enables or disables *aligned instruction bundle* mode. In this mode, sequences of adjacent instructions are grouped into fixed-sized *bundles*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Bundle-directives.html","assembler":"Gas"},{"name":"cfi_def_cfa_register","alt_names":["CFI_DEF_CFA_REGISTER"],"signatures":[".cfi_def_cfa_register *register*"],"description":"`.cfi_def_cfa_register` modifies a rule for computing CFA. From now on register will be used instead of the old one. Offset remains the same.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"endfunc","alt_names":["ENDFUNC"],"signatures":[".endfunc"],"description":"`.endfunc` marks the end of a function specified with `.func`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Endfunc.html","assembler":"Gas"},{"name":"cfi_offset","alt_names":["CFI_OFFSET"],"signatures":[".cfi_offset *offset, register*"],"description":"Previous value of *register* is saved at offset *offset* from CFA.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_restore","alt_names":["CFI_RESTORE"],"signatures":[".cfi_restore *register*"],"description":"`.cfi_restore` says that the rule for *register* is now the same as it was at the beginning of the function, after all initial instruction added by `.cfi_startproc` were executed.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"cfi_same_value","alt_names":["CFI_SAME_VALUE"],"signatures":[".cfi_same_value *register*"],"description":"Current value of *register* is the same like in the previous frame, i.e. no restoration needed.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"ifne","alt_names":["IFNE"],"signatures":[".ifne *absolute expression*"],"description":"Assembles the following section of code if the argument is not equal to zero (in other words, this is equivalent to `.if`).","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/If.html","assembler":"Gas"},{"name":"LOCAL","alt_names":["LOCAL"],"signatures":[".LOCAL *name [ , ... ]*"],"description":"Warning: `LOCAL` is only available if you select \"alternate macro syntax\" with '`--alternate'` or .altmacro. See `.altmacro`.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Macro.html","assembler":"Gas"},{"name":"word","alt_names":["WORD"],"signatures":[".word *expression*"],"description":"This directive expects zero or more expressions, of any section, separated by commas.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Word.html","assembler":"Gas"},{"name":"pushsection","alt_names":["PUSHSECTION"],"signatures":[".pushsection *name [, subsection] [, \"flags\"[, @type[,arguments]]]*"],"description":"This ELF section stack manipulation directive pushes the current section (and subsection) onto the top of the section stack, and then replaces the current section and subsection with *name* and *subsection*.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/PushSection.html","assembler":"Gas"},{"name":"cfi_personality","alt_names":["CFI_PERSONALITY"],"signatures":[".cfi_personality *encoding [, exp]*"],"description":"`.cfi_personality` defines personality routine and its encoding.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"},{"name":"string64","alt_names":["STRING64"],"signatures":[".string64* *\"str\""],"description":"Copy the characters in *str* to the object file. Each 8-bit character from str is copied and expanded to 64 bits.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/String.html","assembler":"Gas"},{"name":"tls_common","alt_names":["TLS_COMMON"],"signatures":[".tls_common *symbol, length[, alignment]*"],"description":"This directive behaves in the same way as the `.comm` directive (see `.comm symbol , length`) except that symbol has type of STT_TLS instead of STT_OBJECT.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Tls_005fcommon.html","assembler":"Gas"},{"name":"bss","alt_names":["BSS"],"signatures":[".bss *subsection*"],"description":"`.bss` tells `as` to assemble the following statements onto the end of the bss section.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Bss.html","assembler":"Gas"},{"name":"lflags","alt_names":["LFLAGS"],"signatures":[".lflags"],"description":"`as` accepts this directive for compatibility with other assemblers, but ignores it.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/Lflags.html","assembler":"Gas"},{"name":"cfi_restore_state","alt_names":["CFI_RESTORE_STATE"],"signatures":[".cfi_restore_state"],"description":"`.cfi_restore_state` pops the set of rules for every register off the stack and places them in the current row.","deprecated":false,"url":"https://sourceware.org/binutils/docs-2.41/as/CFI-directives.html","assembler":"Gas"}]