<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="PRFUM" title="PRFUM -- A64" type="instruction">
  <docvars>
    <docvar key="address-form" value="base-plus-offset"/>
    <docvar key="instr-class" value="general"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="PRFUM"/>
    <docvar key="offset-type" value="off9s_u"/>
  </docvars>
  <heading>PRFUM</heading>
  <desc>
    <brief>
      <para>Prefetch memory (unscaled offset)</para>
    </brief>
    <authored>
      <para>This instruction signals the memory system that
data memory accesses from a specified address are likely to occur in
the near future. The memory system can respond by taking actions
that are expected to speed up the memory accesses when they do
occur, such as preloading the cache line containing the specified
address into one or more caches.</para>
      <para>The effect of a <instruction>PRFUM</instruction> instruction is
<arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>. For more information,
see <xref linkend="ARMARM_CEGGGIDE">Prefetch memory</xref>.</para>
      <para>For information about addressing modes, see
<xref linkend="ARMARM_CHDIIIBB">Load/Store addressing modes</xref>.</para>
    </authored>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <iclass name="Unscaled offset" oneof="1" id="iclass_unscaled_offset" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="address-form" value="base-plus-offset"/>
        <docvar key="instr-class" value="general"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="PRFUM"/>
        <docvar key="offset-type" value="off9s_u"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.ldst.ldst_unscaled.PRFUM_P_ldst_unscaled" tworows="1">
        <box hibit="31" width="2" name="size" usename="1" settings="2" psbits="xx">
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="29" width="3" settings="3">
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="26" name="VR" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="25" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="23" width="2" name="opc" usename="1" settings="2" psbits="xx">
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" width="9" name="imm9" usename="1">
          <c colspan="9"/>
        </box>
        <box hibit="11" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rt" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="PRFUM_P_ldst_unscaled" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="PRFUM"/>
          <docvar key="address-form" value="base-plus-offset"/>
          <docvar key="instr-class" value="general"/>
          <docvar key="offset-type" value="off9s_u"/>
        </docvars>
        <asmtemplate><text>PRFUM  (</text><a hover="Is the prefetch operation, defined as &lt;syntax&gt;&amp;lt;type&amp;gt;&amp;lt;target&amp;gt;&amp;lt;policy&amp;gt;&lt;/syntax&gt;.&#10;&#10;&lt;syntax&gt;&amp;lt;type&amp;gt;&lt;/syntax&gt; is one of:&#10;&#10;&#10;PLD&#10;: Prefetch for load, encoded in the &quot;Rt&amp;lt;4:3&amp;gt;&quot; field as 0b00.&#10;&#10;PLI&#10;: Preload instructions, encoded in the &quot;Rt&amp;lt;4:3&amp;gt;&quot; field as 0b01.&#10;&#10;PST&#10;: Prefetch for store, encoded in the &quot;Rt&amp;lt;4:3&amp;gt;&quot; field as 0b10.&#10;&#10;&#10;&lt;syntax&gt;&amp;lt;target&amp;gt;&lt;/syntax&gt; is one of:&#10;&#10;&#10;L1&#10;: Level 1 cache, encoded in the &quot;Rt&amp;lt;2:1&amp;gt;&quot; field as 0b00.&#10;&#10;L2&#10;: Level 2 cache, encoded in the &quot;Rt&amp;lt;2:1&amp;gt;&quot; field as 0b01.&#10;&#10;L3&#10;: Level 3 cache, encoded in the &quot;Rt&amp;lt;2:1&amp;gt;&quot; field as 0b10.&#10;&#10;&#10;&lt;syntax&gt;&amp;lt;policy&amp;gt;&lt;/syntax&gt; is one of:&#10;&#10;&#10;KEEP&#10;: Retained or temporal prefetch, allocated in the cache normally. Encoded in the &quot;Rt&amp;lt;0&amp;gt;&quot; field as 0.&#10;&#10;STRM&#10;: Streaming or non-temporal prefetch, for data that is used only once. Encoded in the &quot;Rt&amp;lt;0&amp;gt;&quot; field as 1.&#10;&#10;&#10;For more information on these prefetch operations, see x[Prefetch memory](CEGGGIDE).&#10;&#10;For other encodings of the &quot;Rt&quot; field, use &lt;syntax&gt;&amp;lt;imm5&amp;gt;&lt;/syntax&gt;." link="Rt_prfop__2">&lt;prfop&gt;</a><text>|#</text><a hover="Is the prefetch operation encoding as an immediate, in the range 0 to 31, encoded in the &quot;Rt&quot; field.&#10;&#10;This syntax is only for encodings that are not accessible using &lt;syntax&gt;&amp;lt;prfop&amp;gt;&lt;/syntax&gt;." link="Rt_imm5">&lt;imm5&gt;</a><text>), [</text><a hover="Is the 64-bit name of the general-purpose base register or stack pointer, encoded in the &quot;Rn&quot; field." link="XnSP_option">&lt;Xn|SP&gt;</a><text>{, #</text><a hover="Is the optional signed immediate byte offset, in the range -256 to 255, defaulting to 0 and encoded in the &quot;imm9&quot; field." link="simm">&lt;simm&gt;</a><text>}]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.ldst.ldst_unscaled.PRFUM_P_ldst_unscaled" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">constant bits(64) offset = <a link="impl-shared.SignExtend.2" file="shared_pseudocode.xml" hover="function: bits(N) SignExtend(bits(M) x, integer N)">SignExtend</a>(imm9, 64);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer t = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rt);
constant boolean nontemporal = FALSE;
constant boolean tagchecked = FALSE;</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="PRFUM_P_ldst_unscaled" symboldefcount="1">
      <symbol link="Rt_prfop__2">&lt;prfop&gt;</symbol>
      <definition encodedin="Rt">
        <intro>
          <para>Is the prefetch operation, defined as <syntax>&lt;type&gt;&lt;target&gt;&lt;policy&gt;</syntax>.</para>
          <para><syntax>&lt;type&gt;</syntax> is one of:</para>
          <list type="param">
            <listitem>
              <param>PLD</param>
              <content>Prefetch for load, encoded in the "Rt&lt;4:3&gt;" field as <binarynumber>0b00</binarynumber>.</content>
            </listitem>
            <listitem>
              <param>PLI</param>
              <content>Preload instructions, encoded in the "Rt&lt;4:3&gt;" field as <binarynumber>0b01</binarynumber>.</content>
            </listitem>
            <listitem>
              <param>PST</param>
              <content>Prefetch for store, encoded in the "Rt&lt;4:3&gt;" field as <binarynumber>0b10</binarynumber>.</content>
            </listitem>
          </list>
          <para><syntax>&lt;target&gt;</syntax> is one of:</para>
          <list type="param">
            <listitem>
              <param>L1</param>
              <content>Level 1 cache, encoded in the "Rt&lt;2:1&gt;" field as <binarynumber>0b00</binarynumber>.</content>
            </listitem>
            <listitem>
              <param>L2</param>
              <content>Level 2 cache, encoded in the "Rt&lt;2:1&gt;" field as <binarynumber>0b01</binarynumber>.</content>
            </listitem>
            <listitem>
              <param>L3</param>
              <content>Level 3 cache, encoded in the "Rt&lt;2:1&gt;" field as <binarynumber>0b10</binarynumber>.</content>
            </listitem>
          </list>
          <para><syntax>&lt;policy&gt;</syntax> is one of:</para>
          <list type="param">
            <listitem>
              <param>KEEP</param>
              <content>Retained or temporal prefetch, allocated in the cache normally. Encoded in the "Rt&lt;0&gt;" field as 0.</content>
            </listitem>
            <listitem>
              <param>STRM</param>
              <content>Streaming or non-temporal prefetch, for data that is used only once. Encoded in the "Rt&lt;0&gt;" field as 1.</content>
            </listitem>
          </list>
          <para>For more information on these prefetch operations, see <xref linkend="CEGGGIDE">Prefetch memory</xref>.</para>
          <para>For other encodings of the "Rt" field, use <syntax>&lt;imm5&gt;</syntax>.</para>
        </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">Rt</entry>
                <entry class="symbol">&lt;prfop&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">00000</entry>
                <entry class="symbol">PLDL1KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">00001</entry>
                <entry class="symbol">PLDL1STRM</entry>
              </row>
              <row>
                <entry class="bitfield">00010</entry>
                <entry class="symbol">PLDL2KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">00011</entry>
                <entry class="symbol">PLDL2STRM</entry>
              </row>
              <row>
                <entry class="bitfield">00100</entry>
                <entry class="symbol">PLDL3KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">00101</entry>
                <entry class="symbol">PLDL3STRM</entry>
              </row>
              <row>
                <entry class="bitfield">01000</entry>
                <entry class="symbol">PLIL1KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">01001</entry>
                <entry class="symbol">PLIL1STRM</entry>
              </row>
              <row>
                <entry class="bitfield">01010</entry>
                <entry class="symbol">PLIL2KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">01011</entry>
                <entry class="symbol">PLIL2STRM</entry>
              </row>
              <row>
                <entry class="bitfield">01100</entry>
                <entry class="symbol">PLIL3KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">01101</entry>
                <entry class="symbol">PLIL3STRM</entry>
              </row>
              <row>
                <entry class="bitfield">10000</entry>
                <entry class="symbol">PSTL1KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">10001</entry>
                <entry class="symbol">PSTL1STRM</entry>
              </row>
              <row>
                <entry class="bitfield">10010</entry>
                <entry class="symbol">PSTL2KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">10011</entry>
                <entry class="symbol">PSTL2STRM</entry>
              </row>
              <row>
                <entry class="bitfield">10100</entry>
                <entry class="symbol">PSTL3KEEP</entry>
              </row>
              <row>
                <entry class="bitfield">10101</entry>
                <entry class="symbol">PSTL3STRM</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="PRFUM_P_ldst_unscaled" symboldefcount="1">
      <symbol link="Rt_imm5">&lt;imm5&gt;</symbol>
      <account encodedin="Rt">
        <intro>
          <para>Is the prefetch operation encoding as an immediate, in the range 0 to 31, encoded in the "Rt" field.</para>
          <para>This syntax is only for encodings that are not accessible using <syntax>&lt;prfop&gt;</syntax>.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="PRFUM_P_ldst_unscaled" symboldefcount="1">
      <symbol link="XnSP_option">&lt;Xn|SP&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 64-bit name of the general-purpose base register or stack pointer, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="PRFUM_P_ldst_unscaled" symboldefcount="1">
      <symbol link="simm">&lt;simm&gt;</symbol>
      <account encodedin="imm9">
        <intro>
          <para>Is the optional signed immediate byte offset, in the range -256 to 255, defaulting to 0 and encoded in the "imm9" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.ldst.ldst_unscaled.PRFUM_P_ldst_unscaled" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute">bits(64) address;

constant boolean privileged = PSTATE.EL != <a link="EL0" file="shared_pseudocode.xml" hover="constant bits(2) EL0 = '00'">EL0</a>;
constant <a link="AccessDescriptor" file="shared_pseudocode.xml" hover="type AccessDescriptor is ( AccessType acctype, bits(2) el, SecurityState ss, boolean acqsc, boolean acqpc, boolean relsc, boolean limitedordered, boolean exclusive, boolean atomicop, MemAtomicOp modop, boolean nontemporal, boolean read, boolean write, CacheOp cacheop, CacheOpScope opscope, CacheType cachetype, boolean pan, boolean transactional, boolean nonfault, boolean firstfault, boolean first, boolean contiguous, boolean streamingsve, boolean ls64, boolean mops, boolean rcw, boolean rcws, boolean toplevel, VARange varange, boolean a32lsmd, boolean tagchecked, boolean tagaccess, boolean devstoreunpred, boolean ispair, boolean highestaddressfirst, MPAMinfo mpam )">AccessDescriptor</a> accdesc = CreateAccDescGPR(<a link="MemOp_PREFETCH" file="shared_pseudocode.xml" hover="enumeration MemOp {MemOp_LOAD, MemOp_STORE, MemOp_PREFETCH}">MemOp_PREFETCH</a>, nontemporal, privileged,
                                                     tagchecked);

if n == 31 then
    address = <a link="impl-aarch64.SP.read.0" file="shared_pseudocode.xml" hover="accessor: bits(64) SP[]">SP</a>[];
else
    address = <a link="impl-aarch64.X.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) X[integer n, integer width]">X</a>[n, 64];

address = <a link="impl-shared.AddressAdd.3" file="shared_pseudocode.xml" hover="function: bits(64) AddressAdd(bits(64) base, integer offset, AccessDescriptor accdesc)">AddressAdd</a>(address, offset, accdesc);

<a link="impl-aarch64.Prefetch.2" file="shared_pseudocode.xml" hover="function: Prefetch(bits(64) address, bits(5) prfop)">Prefetch</a>(address, t&lt;4:0&gt;);</pstext></ps>
  </ps_section>
</instructionsection>
