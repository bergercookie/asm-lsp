<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="FMOV_float_imm" title="FMOV (scalar, immediate) -- A64" type="instruction">
  <docvars>
    <docvar key="immediate-type" value="imm8f"/>
    <docvar key="instr-class" value="float"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="FMOV"/>
  </docvars>
  <heading>FMOV (scalar, immediate)</heading>
  <desc>
    <brief>
      <para>Floating-point move immediate (scalar)</para>
    </brief>
    <authored>
      <para>This instruction copies a floating-point immediate
constant into the SIMD&amp;FP destination register.</para>
      <para>Depending on the settings in the <register_link id="AArch64-cpacr_el1.xml" state="AArch64">CPACR_EL1</register_link>,
<register_link id="AArch64-cptr_el2.xml" state="AArch64">CPTR_EL2</register_link>, and <register_link id="AArch64-cptr_el3.xml" state="AArch64">CPTR_EL3</register_link> registers,
and the current Security state and Exception level,
an attempt to execute the instruction might be trapped.</para>
    </authored>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <iclass name="Floating point constant in 8 bits" oneof="1" id="iclass_floating_point_constant_in_8_bits" no_encodings="3" isa="A64">
      <docvars>
        <docvar key="immediate-type" value="imm8f"/>
        <docvar key="instr-class" value="float"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMOV"/>
      </docvars>
      <iclassintro count="3"/>
      <regdiagram form="32" psname="A64.simd_dp.floatimm.FMOV_H_floatimm" tworows="1">
        <box hibit="31" name="M" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="30" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="29" name="S" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="23" width="2" name="ftype" usename="1">
          <c colspan="2"/>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="20" width="8" name="imm8" usename="1">
          <c colspan="8"/>
        </box>
        <box hibit="12" width="3" settings="3">
          <c>1</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="imm5" usename="1" settings="5" psbits="xxxxx">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMOV_H_floatimm" oneofinclass="3" oneof="3" label="Half-precision" bitdiffs="ftype == 11">
        <docvars>
          <docvar key="datatype" value="half"/>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOV"/>
          <docvar key="immediate-type" value="imm8f"/>
          <docvar key="instr-class" value="float"/>
        </docvars>
        <arch_variants>
          <arch_variant feature="FEAT_FP16" name="ARMv8.2"/>
        </arch_variants>
        <box hibit="23" width="2" name="ftype">
          <c>1</c>
          <c>1</c>
        </box>
        <asmtemplate><text>FMOV  </text><a hover="Is the 16-bit name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Hd">&lt;Hd&gt;</a><text>, #</text><a hover="Is a signed floating-point constant with 3-bit exponent and normalized 4 bits of precision, encoded in the &quot;imm8&quot; field. For details of the range of constants available and the encoding of &lt;syntax&gt;&amp;lt;imm&amp;gt;&lt;/syntax&gt;, see x[Modified immediate constants in A64 floating-point instructions](CJAFAFAI)." link="imm__20">&lt;imm&gt;</a></asmtemplate>
      </encoding>
      <encoding name="FMOV_S_floatimm" oneofinclass="3" oneof="3" label="Single-precision" bitdiffs="ftype == 00">
        <docvars>
          <docvar key="datatype" value="single"/>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMOV"/>
          <docvar key="immediate-type" value="imm8f"/>
          <docvar key="instr-class" value="float"/>
        </docvars>
        <box hibit="23" width="2" name="ftype">
          <c>0</c>
          <c>0</c>
        </box>
        <asmtemplate><text>FMOV  </text><a hover="Is the 32-bit name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Sd">&lt;Sd&gt;</a><text>, #</text><a hover="Is a signed floating-point constant with 3-bit exponent and normalized 4 bits of precision, encoded in the &quot;imm8&quot; field. For details of the range of constants available and the encoding of &lt;syntax&gt;&amp;lt;imm&amp;gt;&lt;/syntax&gt;, see x[Modified immediate constants in A64 floating-point instructions](CJAFAFAI)." link="imm__20">&lt;imm&gt;</a></asmtemplate>
      </encoding>
      <encoding name="FMOV_D_floatimm" oneofinclass="3" oneof="3" label="Double-precision" bitdiffs="ftype == 01">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="double"/>
          <docvar key="mnemonic" value="FMOV"/>
          <docvar key="instr-class" value="float"/>
          <docvar key="immediate-type" value="imm8f"/>
        </docvars>
        <box hibit="23" width="2" name="ftype">
          <c>0</c>
          <c>1</c>
        </box>
        <asmtemplate><text>FMOV  </text><a hover="Is the 64-bit name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Dd">&lt;Dd&gt;</a><text>, #</text><a hover="Is a signed floating-point constant with 3-bit exponent and normalized 4 bits of precision, encoded in the &quot;imm8&quot; field. For details of the range of constants available and the encoding of &lt;syntax&gt;&amp;lt;imm&amp;gt;&lt;/syntax&gt;, see x[Modified immediate constants in A64 floating-point instructions](CJAFAFAI)." link="imm__20">&lt;imm&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.floatimm.FMOV_H_floatimm" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if ftype == '10' || (ftype == '11' &amp;&amp; !IsFeatureImplemented(FEAT_FP16)) then UNDEFINED;

constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);

constant integer datasize = 8 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(ftype EOR '10');
constant bits(datasize) imm = <a link="impl-shared.VFPExpandImm.2" file="shared_pseudocode.xml" hover="function: bits(N) VFPExpandImm(bits(8) imm8, integer N)">VFPExpandImm</a>(imm8, datasize);</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="FMOV_H_floatimm" symboldefcount="1">
      <symbol link="Hd">&lt;Hd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 16-bit name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMOV_H_floatimm, FMOV_S_floatimm, FMOV_D_floatimm" symboldefcount="1">
      <symbol link="imm__20">&lt;imm&gt;</symbol>
      <account encodedin="imm8">
        <intro>
          <para>Is a signed floating-point constant with 3-bit exponent and normalized 4 bits of precision, encoded in the "imm8" field. For details of the range of constants available and the encoding of <syntax>&lt;imm&gt;</syntax>, see <xref linkend="CJAFAFAI">Modified immediate constants in A64 floating-point instructions</xref>.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMOV_S_floatimm" symboldefcount="1">
      <symbol link="Sd">&lt;Sd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 32-bit name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMOV_D_floatimm" symboldefcount="1">
      <symbol link="Dd">&lt;Dd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 64-bit name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.simd_dp.floatimm.FMOV_H_floatimm" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="impl-aarch64.CheckFPEnabled64.0" file="shared_pseudocode.xml" hover="function: CheckFPEnabled64()">CheckFPEnabled64</a>();

<a link="impl-aarch64.V.write.2" file="shared_pseudocode.xml" hover="accessor: V[integer n, ESize width] = bits(width) value">V</a>[d, datasize] = imm;</pstext></ps>
  </ps_section>
</instructionsection>
