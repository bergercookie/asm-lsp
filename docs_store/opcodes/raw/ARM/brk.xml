<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="BRK" title="BRK -- A64" type="instruction">
  <docvars>
    <docvar key="instr-class" value="system"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="BRK"/>
  </docvars>
  <heading>BRK</heading>
  <desc>
    <brief>
      <para>Breakpoint instruction</para>
    </brief>
    <authored>
      <para>This instruction generates a Breakpoint
Instruction exception. The PE records the exception in
<xref linkend="ARMARM_ESR_ELx">ESR_ELx</xref>, using the EC value <hexnumber>0x3C</hexnumber>, and
captures the value of the immediate argument in
<xref linkend="ARMARM_ESR_ELx">ESR_ELx</xref>.ISS.</para>
      <para>Within a guarded memory region, while <xref linkend="ARMARM_BEIDIGBH">PSTATE</xref>.BTYPE
!= <binarynumber>0b00</binarynumber>, a <instruction>BRK</instruction> instruction will not generate a Branch
Target exception and will generate a Breakpoint Instruction exception as
normal. For more information, see <xref linkend="ARMARM_MDSec.PSTATE_BTYPE">PSTATE.BTYPE</xref>.</para>
    </authored>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <iclass name="System" oneof="1" id="iclass_system" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="system"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="BRK"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.control.exception.BRK_EX_exception" tworows="1">
        <box hibit="31" width="8" settings="8">
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="23" width="3" name="opc" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="20" width="16" name="imm16" usename="1">
          <c colspan="16"/>
        </box>
        <box hibit="4" width="3" name="op2" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="LL" usename="1" settings="2" psbits="xx">
          <c>0</c>
          <c>0</c>
        </box>
      </regdiagram>
      <encoding name="BRK_EX_exception" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="BRK"/>
          <docvar key="instr-class" value="system"/>
        </docvars>
        <asmtemplate><text>BRK  #</text><a hover="Is a 16-bit unsigned immediate, in the range 0 to 65535, encoded in the &quot;imm16&quot; field." link="imm">&lt;imm&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.control.exception.BRK_EX_exception" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">constant bits(16) comment = imm16;
if IsFeatureImplemented(FEAT_BTI) then
    <a link="impl-aarch64.SetBTypeCompatible.1" file="shared_pseudocode.xml" hover="function: SetBTypeCompatible(boolean x)">SetBTypeCompatible</a>(TRUE);
   </pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="BRK_EX_exception" symboldefcount="1">
      <symbol link="imm">&lt;imm&gt;</symbol>
      <account encodedin="imm16">
        <intro>
          <para>Is a 16-bit unsigned immediate, in the range 0 to 65535, encoded in the "imm16" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.control.exception.BRK_EX_exception" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="AArch64.SoftwareBreakpoint.1" file="shared_pseudocode.xml" hover="function: AArch64.SoftwareBreakpoint(bits(16) immediate)">AArch64.SoftwareBreakpoint</a>(comment);</pstext></ps>
  </ps_section>
</instructionsection>
