<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="GCSSS2_SYSL" title="GCSSS2 -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="GCSSS2"/>
    <docvar key="instr-class" value="system"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="SYSL"/>
  </docvars>
  <heading>GCSSS2</heading>
  <desc>
    <brief>
      <para>Guarded Control Stack switch stack 2</para>
    </brief>
    <authored>
      <para>This instruction validates that the most recent entry of
the Guarded Control Stack being switched to contains an In-progress cap entry,
stores a Valid cap entry to the Guarded Control Stack that is being switched
from, and sets Xt to the Guarded Control Stack pointer that is being
switched from.</para>
    </authored>
  </desc>
  <aliasto refiform="sysl.xml" iformid="SYSL">SYSL</aliasto>
  <classes>
    <iclass name="System" oneof="1" id="iclass_system" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="system"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="SYSL"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_GCS" name="ARMv9.4"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.control.systeminstrs.SYSL_RC_systeminstrs.GCSSS2" tworows="1">
        <box hibit="31" width="10" settings="10">
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" name="L" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="20" width="2" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="18" width="3" name="op1" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="15" width="4" name="CRn" usename="1" settings="4" psbits="xxxx">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="11" width="4" name="CRm" usename="1" settings="4" psbits="xxxx">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="7" width="3" name="op2" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="4" width="5" name="Rt" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="GCSSS2_SYSL_RC_systeminstrs" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="SYSL"/>
          <docvar key="alias_mnemonic" value="GCSSS2"/>
          <docvar key="instr-class" value="system"/>
        </docvars>
        <asmtemplate><text>GCSSS2  </text><a hover="Is the 64-bit name of the general-purpose destination register, encoded in the &quot;Rt&quot; field." link="XtOrXZR__4">&lt;Xt&gt;</a></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="sysl.xml#SYSL_RC_systeminstrs">SYSL</a><text>  </text><a hover="Is the 64-bit name of the general-purpose destination register, encoded in the &quot;Rt&quot; field." href="sysl.xml#XtOrXZR__4">&lt;Xt&gt;</a><text>, #3, C7, C7, #3</text></asmtemplate>
          <aliascond>Unconditionally</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="GCSSS2_SYSL_RC_systeminstrs" symboldefcount="1">
      <symbol link="XtOrXZR__4">&lt;Xt&gt;</symbol>
      <account encodedin="Rt">
        <intro>
          <para>Is the 64-bit name of the general-purpose destination register, encoded in the "Rt" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
