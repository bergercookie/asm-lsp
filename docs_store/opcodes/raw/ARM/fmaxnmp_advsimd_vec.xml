<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="FMAXNMP_advsimd_vec" title="FMAXNMP (vector) -- A64" type="instruction">
  <docvars>
    <docvar key="advsimd-reguse" value="3reg-same"/>
    <docvar key="advsimd-type" value="simd"/>
    <docvar key="instr-class" value="advsimd"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="FMAXNMP"/>
  </docvars>
  <heading>FMAXNMP (vector)</heading>
  <desc>
    <brief>
      <para>Floating-point maximum number pairwise (vector)</para>
    </brief>
    <authored>
      <para>This instruction creates a vector by
concatenating the vector elements of the first source SIMD&amp;FP register
after the vector elements of the second source SIMD&amp;FP register,
reads each pair of adjacent vector elements in the
two source SIMD&amp;FP registers,
writes the largest of each pair of values
into a vector, and writes the vector to the destination SIMD&amp;FP register.
All the values in this instruction are floating-point values.</para>
      <para>Regardless of the value of <register_link id="AArch64-fpcr.xml" state="AArch64">FPCR</register_link>.AH,
the behavior is as follows for each pairwise operation:</para>
      <list type="unordered">
        <listitem>
          <content>Negative zero compares less than positive zero.</content>
        </listitem>
        <listitem>
          <content>If one element is numeric and the other is a quiet NaN,
  the result is the numeric value.</content>
        </listitem>
        <listitem>
          <content>When <register_link id="AArch64-fpcr.xml" state="AArch64">FPCR</register_link>.DN is 0, if either element is a signaling NaN
  or if both elements are NaNs, the result is a quiet NaN.</content>
        </listitem>
        <listitem>
          <content>When <register_link id="AArch64-fpcr.xml" state="AArch64">FPCR</register_link>.DN is 1, if either element is a signaling NaN
  or if both elements are NaNs, the result is Default NaN.</content>
        </listitem>
      </list>
      <para>This instruction can generate a floating-point exception.
Depending on the settings in <register_link id="AArch64-fpcr.xml" state="AArch64">FPCR</register_link>,
the exception results in either a flag being set in <register_link id="AArch64-fpsr.xml" state="AArch64">FPSR</register_link>
or a synchronous exception being generated.
For more information, see
<xref linkend="ARMARM_BEIJDDAG">Floating-point exception traps</xref>.</para>
      <para>Depending on the settings in the <register_link id="AArch64-cpacr_el1.xml" state="AArch64">CPACR_EL1</register_link>,
<register_link id="AArch64-cptr_el2.xml" state="AArch64">CPTR_EL2</register_link>, and <register_link id="AArch64-cptr_el3.xml" state="AArch64">CPTR_EL3</register_link> registers,
and the current Security state and Exception level,
an attempt to execute the instruction might be trapped.</para>
    </authored>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <classesintro count="2">
      <txt>It has encodings from 2 classes:</txt>
      <a href="#iclass_half_precision">Half-precision</a>
      <txt> and </txt>
      <a href="#iclass_single_precision_and_double_precision">Single-precision and double-precision</a>
    </classesintro>
    <iclass name="Half-precision" oneof="2" id="iclass_half_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-datatype" value="simd-half"/>
        <docvar key="advsimd-reguse" value="3reg-same"/>
        <docvar key="advsimd-type" value="simd"/>
        <docvar key="datatype" value="half"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMAXNMP"/>
        <docvar key="reguse-datatype" value="3reg-same-half"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_FP16" name="ARMv8.2"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.simd_dp.asimdsamefp16.FMAXNMP_asimdsamefp16_only" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="30" width="1" name="Q" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="23" name="a" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="22" width="2" settings="2">
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="Rm" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="2" settings="2">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="13" width="3" name="opcode" usename="1" settings="3" psbits="xxx">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMAXNMP_asimdsamefp16_only" oneofinclass="1" oneof="2" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="half"/>
          <docvar key="mnemonic" value="FMAXNMP"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="advsimd-datatype" value="simd-half"/>
          <docvar key="advsimd-reguse" value="3reg-same"/>
          <docvar key="advsimd-type" value="simd"/>
          <docvar key="reguse-datatype" value="3reg-same-half"/>
        </docvars>
        <asmtemplate><text>FMAXNMP  </text><a hover="Is the name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Vd">&lt;Vd&gt;</a><text>.</text><a hover="For the half-precision variant: is an arrangement specifier, " link="T_option__4">&lt;T&gt;</a><text>, </text><a hover="Is the name of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Vn__2">&lt;Vn&gt;</a><text>.</text><a hover="For the half-precision variant: is an arrangement specifier, " link="T_option__4">&lt;T&gt;</a><text>, </text><a hover="Is the name of the second SIMD&amp;amp;FP source register, encoded in the &quot;Rm&quot; field." link="Vm">&lt;Vm&gt;</a><text>.</text><a hover="For the half-precision variant: is an arrangement specifier, " link="T_option__4">&lt;T&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asimdsamefp16.FMAXNMP_asimdsamefp16_only" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_FP16) then UNDEFINED;

constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rm);
constant integer esize = 16;
constant integer datasize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Q);
constant integer elements = datasize DIV esize;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Single-precision and double-precision" oneof="2" id="iclass_single_precision_and_double_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-datatype" value="simd-single-and-double"/>
        <docvar key="advsimd-reguse" value="3reg-same"/>
        <docvar key="advsimd-type" value="simd"/>
        <docvar key="datatype" value="single-and-double"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMAXNMP"/>
        <docvar key="reguse-datatype" value="3reg-same-single-and-double"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.simd_dp.asimdsame.FMAXNMP_asimdsame_only" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="30" width="1" name="Q" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="23" name="o1" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="22" width="1" name="sz" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="21" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="20" width="5" name="Rm" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="5" name="opcode" usename="1" settings="5" psbits="xxxxx">
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMAXNMP_asimdsame_only" oneofinclass="1" oneof="2" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="single-and-double"/>
          <docvar key="mnemonic" value="FMAXNMP"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="advsimd-datatype" value="simd-single-and-double"/>
          <docvar key="advsimd-reguse" value="3reg-same"/>
          <docvar key="advsimd-type" value="simd"/>
          <docvar key="reguse-datatype" value="3reg-same-single-and-double"/>
        </docvars>
        <asmtemplate><text>FMAXNMP  </text><a hover="Is the name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Vd">&lt;Vd&gt;</a><text>.</text><a hover="For the single-precision and double-precision variant: is an arrangement specifier, " link="T_option__19">&lt;T&gt;</a><text>, </text><a hover="Is the name of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Vn__2">&lt;Vn&gt;</a><text>.</text><a hover="For the single-precision and double-precision variant: is an arrangement specifier, " link="T_option__19">&lt;T&gt;</a><text>, </text><a hover="Is the name of the second SIMD&amp;amp;FP source register, encoded in the &quot;Rm&quot; field." link="Vm">&lt;Vm&gt;</a><text>.</text><a hover="For the single-precision and double-precision variant: is an arrangement specifier, " link="T_option__19">&lt;T&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asimdsame.FMAXNMP_asimdsame_only" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if sz:Q == '10' then UNDEFINED;
constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rm);
constant integer esize = 32 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(sz);
constant integer datasize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Q);
constant integer elements = datasize DIV esize;</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="FMAXNMP_asimdsamefp16_only, FMAXNMP_asimdsame_only" symboldefcount="1">
      <symbol link="Vd">&lt;Vd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMAXNMP_asimdsamefp16_only" symboldefcount="1">
      <symbol link="T_option__4">&lt;T&gt;</symbol>
      <definition encodedin="Q">
        <intro>For the half-precision variant: is an arrangement specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">Q</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="symbol">4H</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="symbol">8H</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMAXNMP_asimdsame_only" symboldefcount="2">
      <symbol link="T_option__19">&lt;T&gt;</symbol>
      <definition encodedin="sz:Q">
        <intro>For the single-precision and double-precision variant: is an arrangement specifier, </intro>
        <table class="valuetable">
          <tgroup cols="3">
            <thead>
              <row>
                <entry class="bitfield">sz</entry>
                <entry class="bitfield">Q</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="bitfield">0</entry>
                <entry class="symbol">2S</entry>
              </row>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="bitfield">1</entry>
                <entry class="symbol">4S</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">0</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">1</entry>
                <entry class="symbol">2D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMAXNMP_asimdsamefp16_only, FMAXNMP_asimdsame_only" symboldefcount="1">
      <symbol link="Vn__2">&lt;Vn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the name of the first SIMD&amp;FP source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMAXNMP_asimdsamefp16_only, FMAXNMP_asimdsame_only" symboldefcount="1">
      <symbol link="Vm">&lt;Vm&gt;</symbol>
      <account encodedin="Rm">
        <intro>
          <para>Is the name of the second SIMD&amp;FP source register, encoded in the "Rm" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.simd_dp.asimdsamefp16.FMAXNMP_asimdsamefp16_only" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="impl-aarch64.CheckFPAdvSIMDEnabled64.0" file="shared_pseudocode.xml" hover="function: CheckFPAdvSIMDEnabled64()">CheckFPAdvSIMDEnabled64</a>();
constant bits(datasize) operand1 = <a link="impl-aarch64.V.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) V[integer n, ESize width]">V</a>[n, datasize];
constant bits(datasize) operand2 = <a link="impl-aarch64.V.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) V[integer n, ESize width]">V</a>[m, datasize];
bits(datasize) result;
constant bits(2*datasize) concat = operand2:operand1;
bits(esize) element1;
bits(esize) element2;

for e = 0 to elements-1
    element1 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[concat, 2*e, esize];
    element2 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[concat, (2*e)+1, esize];
    <a link="impl-shared.Elem.write.3" file="shared_pseudocode.xml" hover="accessor: Elem[bits(N) &amp;vector, integer e, integer size] = bits(size) value">Elem</a>[result, e, esize] = <a link="impl-shared.FPMaxNum.3" file="shared_pseudocode.xml" hover="function: bits(N) FPMaxNum(bits(N) op1_in, bits(N) op2_in, FPCR_Type fpcr)">FPMaxNum</a>(element1, element2, FPCR);
<a link="impl-aarch64.V.write.2" file="shared_pseudocode.xml" hover="accessor: V[integer n, ESize width] = bits(width) value">V</a>[d, datasize] = result;</pstext></ps>
  </ps_section>
</instructionsection>
