<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="MOV_DUP_advsimd_elt" title="MOV (scalar) -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="MOV"/>
    <docvar key="instr-class" value="advsimd"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="DUP"/>
    <docvar key="vector-xfer-type" value="scalar-from-element"/>
  </docvars>
  <heading>MOV (scalar)</heading>
  <desc>
    <brief>
      <para>Move vector element to scalar</para>
    </brief>
    <authored>
      <para>This instruction duplicates the specified vector element
in the SIMD&amp;FP source register
into a scalar,
and writes the result to the SIMD&amp;FP destination register.</para>
      <para>Depending on the settings in the <register_link id="AArch64-cpacr_el1.xml" state="AArch64">CPACR_EL1</register_link>,
<register_link id="AArch64-cptr_el2.xml" state="AArch64">CPTR_EL2</register_link>, and <register_link id="AArch64-cptr_el3.xml" state="AArch64">CPTR_EL3</register_link> registers,
and the current Security state and Exception level,
an attempt to execute the instruction might be trapped.</para>
    </authored>
  </desc>
  <operationalnotes>
    <para>If PSTATE.DIT is 1:</para>
    <list type="unordered">
      <listitem>
        <content>The execution time of this instruction is independent of:<list type="unordered">
            <listitem>
              <content>The values of the data supplied in any of its registers.</content>
            </listitem>
            <listitem>
              <content>The values of the NZCV flags.</content>
            </listitem>
          </list>
        </content>
      </listitem>
      <listitem>
        <content>The response of this instruction to asynchronous exceptions does not vary based on:<list type="unordered">
            <listitem>
              <content>The values of the data supplied in any of its registers.</content>
            </listitem>
            <listitem>
              <content>The values of the NZCV flags.</content>
            </listitem>
          </list>
        </content>
      </listitem>
    </list>
  </operationalnotes>
  <aliasto refiform="dup_advsimd_elt.xml" iformid="DUP_advsimd_elt">DUP (element)</aliasto>
  <classes>
    <iclass name="Scalar" oneof="1" id="iclass_scalar" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="DUP"/>
        <docvar key="vector-xfer-type" value="scalar-from-element"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.simd_dp.asisdone.DUP_asisdone_only.MOV" tworows="1">
        <box hibit="31" width="2" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="29" name="op" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="8" settings="8">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="imm5" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="15" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="14" width="4" name="imm4" usename="1" settings="4" psbits="xxxx">
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>1</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="MOV_DUP_asisdone_only" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="DUP"/>
          <docvar key="alias_mnemonic" value="MOV"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="vector-xfer-type" value="scalar-from-element"/>
        </docvars>
        <asmtemplate><text>MOV  </text><a hover="Is the destination width specifier, " link="V_option__3">&lt;V&gt;</a><a hover="Is the number of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="d">&lt;d&gt;</a><text>, </text><a hover="Is the name of the SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Vn">&lt;Vn&gt;</a><text>.</text><a hover="Is the element width specifier, " link="T_option__13">&lt;T&gt;</a><text>[</text><a hover="Is the element index " link="imm5_index__7">&lt;index&gt;</a><text>]</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="dup_advsimd_elt.xml#DUP_asisdone_only">DUP</a><text>  </text><a hover="Is the destination width specifier, " href="dup_advsimd_elt.xml#V_option__3">&lt;V&gt;</a><a hover="Is the number of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." href="dup_advsimd_elt.xml#d">&lt;d&gt;</a><text>, </text><a hover="Is the name of the SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." href="dup_advsimd_elt.xml#Vn">&lt;Vn&gt;</a><text>.</text><a hover="For the scalar variant: is the element width specifier, " href="dup_advsimd_elt.xml#T_option__12">&lt;T&gt;</a><text>[</text><a hover="Is the element index " href="dup_advsimd_elt.xml#imm5_index__7">&lt;index&gt;</a><text>]</text></asmtemplate>
          <aliascond>Unconditionally</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="MOV_DUP_asisdone_only" symboldefcount="1">
      <symbol link="V_option__3">&lt;V&gt;</symbol>
      <definition encodedin="imm5">
        <intro>Is the destination width specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">imm5</entry>
                <entry class="symbol">&lt;V&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">x0000</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
              <row>
                <entry class="bitfield">xxxx1</entry>
                <entry class="symbol">B</entry>
              </row>
              <row>
                <entry class="bitfield">xxx10</entry>
                <entry class="symbol">H</entry>
              </row>
              <row>
                <entry class="bitfield">xx100</entry>
                <entry class="symbol">S</entry>
              </row>
              <row>
                <entry class="bitfield">x1000</entry>
                <entry class="symbol">D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="MOV_DUP_asisdone_only" symboldefcount="1">
      <symbol link="d">&lt;d&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the number of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="MOV_DUP_asisdone_only" symboldefcount="1">
      <symbol link="Vn">&lt;Vn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the name of the SIMD&amp;FP source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="MOV_DUP_asisdone_only" symboldefcount="1">
      <symbol link="T_option__13">&lt;T&gt;</symbol>
      <definition encodedin="imm5">
        <intro>Is the element width specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">imm5</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">x0000</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
              <row>
                <entry class="bitfield">xxxx1</entry>
                <entry class="symbol">B</entry>
              </row>
              <row>
                <entry class="bitfield">xxx10</entry>
                <entry class="symbol">H</entry>
              </row>
              <row>
                <entry class="bitfield">xx100</entry>
                <entry class="symbol">S</entry>
              </row>
              <row>
                <entry class="bitfield">x1000</entry>
                <entry class="symbol">D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="MOV_DUP_asisdone_only" symboldefcount="1">
      <symbol link="imm5_index__7">&lt;index&gt;</symbol>
      <definition encodedin="imm5">
        <intro>Is the element index </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">imm5</entry>
                <entry class="symbol">&lt;index&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">x0000</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
              <row>
                <entry class="bitfield">xxxx1</entry>
                <entry class="symbol">UInt(imm5&lt;4:1&gt;)</entry>
              </row>
              <row>
                <entry class="bitfield">xxx10</entry>
                <entry class="symbol">UInt(imm5&lt;4:2&gt;)</entry>
              </row>
              <row>
                <entry class="bitfield">xx100</entry>
                <entry class="symbol">UInt(imm5&lt;4:3&gt;)</entry>
              </row>
              <row>
                <entry class="bitfield">x1000</entry>
                <entry class="symbol">UInt(imm5&lt;4&gt;)</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
  </explanations>
</instructionsection>
