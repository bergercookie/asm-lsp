<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<instructionsection id="FMUL_advsimd_elt" title="FMUL (by element) -- A64" type="instruction">
  <docvars>
    <docvar key="instr-class" value="advsimd"/>
    <docvar key="isa" value="A64"/>
    <docvar key="mnemonic" value="FMUL"/>
  </docvars>
  <heading>FMUL (by element)</heading>
  <desc>
    <brief>
      <para>Floating-point multiply (by element)</para>
    </brief>
    <authored>
      <para>This instruction multiplies the vector elements
in the first source SIMD&amp;FP register by the specified
value in the second source SIMD&amp;FP register,
places the results in a vector, and writes the vector
to the destination SIMD&amp;FP register.
All the values in this instruction are floating-point values.</para>
      <para>This instruction can generate a floating-point exception.
Depending on the settings in <register_link id="AArch64-fpcr.xml" state="AArch64">FPCR</register_link>,
the exception results in either a flag being set in <register_link id="AArch64-fpsr.xml" state="AArch64">FPSR</register_link>
or a synchronous exception being generated.
For more information, see
<xref linkend="ARMARM_BEIJDDAG">Floating-point exception traps</xref>.</para>
      <para>Depending on the settings in the <register_link id="AArch64-cpacr_el1.xml" state="AArch64">CPACR_EL1</register_link>,
<register_link id="AArch64-cptr_el2.xml" state="AArch64">CPTR_EL2</register_link>, and <register_link id="AArch64-cptr_el3.xml" state="AArch64">CPTR_EL3</register_link> registers,
and the current Security state and Exception level,
an attempt to execute the instruction might be trapped.</para>
    </authored>
  </desc>
  <alias_list howmany="0"/>
  <classes>
    <classesintro count="4">
      <txt>It has encodings from 4 classes:</txt>
      <a href="#iclass_scalar_half_precision">Scalar, half-precision</a>
      <txt>, </txt>
      <a href="#iclass_scalar_single_precision_and_double_precision">Scalar, single-precision and double-precision</a>
      <txt>, </txt>
      <a href="#iclass_vector_half_precision">Vector, half-precision</a>
      <txt> and </txt>
      <a href="#iclass_vector_single_precision_and_double_precision">Vector, single-precision and double-precision</a>
    </classesintro>
    <iclass name="Scalar, half-precision" oneof="4" id="iclass_scalar_half_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-datatype" value="sisd-half"/>
        <docvar key="advsimd-reguse" value="2reg-scalar"/>
        <docvar key="advsimd-type" value="sisd"/>
        <docvar key="datatype" value="half"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMUL"/>
        <docvar key="reguse-datatype" value="2reg-scalar-half"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_FP16" name="ARMv8.2"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.simd_dp.asisdelem.FMUL_asisdelem_RH_H" tworows="1">
        <box hibit="31" width="2" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="23" width="2" name="size" usename="1" settings="2" psbits="xx">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" name="L" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="20" width="1" name="M" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="19" width="4" name="Rm" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="15" width="4" name="opcode" usename="1" settings="4" psbits="xxxx">
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="11" width="1" name="H" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMUL_asisdelem_RH_H" oneofinclass="1" oneof="4" label="">
        <docvars>
          <docvar key="datatype" value="half"/>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMUL"/>
          <docvar key="advsimd-datatype" value="sisd-half"/>
          <docvar key="advsimd-reguse" value="2reg-scalar"/>
          <docvar key="advsimd-type" value="sisd"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="reguse-datatype" value="2reg-scalar-half"/>
        </docvars>
        <asmtemplate><text>FMUL  </text><a hover="Is the 16-bit name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Hd">&lt;Hd&gt;</a><text>, </text><a hover="Is the 16-bit name of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Hn">&lt;Hn&gt;</a><text>, </text><a hover="For the half-precision variant: is the name of the second SIMD&amp;amp;FP source register, in the range V0 to V15, encoded in the &quot;Rm&quot; field." link="Vm__2">&lt;Vm&gt;</a><text>.H[</text><a hover="For the half-precision variant: is the element index, in the range 0 to 7, encoded in the &quot;H:L:M&quot; fields." link="index__8">&lt;index&gt;</a><text>]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asisdelem.FMUL_asisdelem_RH_H" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_FP16) then UNDEFINED;

constant integer idxdsize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rm);
constant integer index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H:L:M);

constant integer esize = 16;
constant integer datasize = esize;

constant integer elements = 1;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Scalar, single-precision and double-precision" oneof="4" id="iclass_scalar_single_precision_and_double_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-datatype" value="sisd-single-and-double"/>
        <docvar key="advsimd-reguse" value="2reg-scalar"/>
        <docvar key="advsimd-type" value="sisd"/>
        <docvar key="datatype" value="single-and-double"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMUL"/>
        <docvar key="reguse-datatype" value="2reg-scalar-single-and-double"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.simd_dp.asisdelem.FMUL_asisdelem_R_SD" tworows="1">
        <box hibit="31" width="2" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="6" settings="6">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="22" width="1" name="sz" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="21" width="1" name="L" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="20" width="1" name="M" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="19" width="4" name="Rm" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="15" width="4" name="opcode" usename="1" settings="4" psbits="xxxx">
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="11" width="1" name="H" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMUL_asisdelem_R_SD" oneofinclass="1" oneof="4" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="single-and-double"/>
          <docvar key="mnemonic" value="FMUL"/>
          <docvar key="advsimd-reguse" value="2reg-scalar"/>
          <docvar key="advsimd-type" value="sisd"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="advsimd-datatype" value="sisd-single-and-double"/>
          <docvar key="reguse-datatype" value="2reg-scalar-single-and-double"/>
        </docvars>
        <asmtemplate><text>FMUL  </text><a hover="Is a width specifier, " link="V_option__9">&lt;V&gt;</a><a hover="Is the number of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="d">&lt;d&gt;</a><text>, </text><a hover="Is a width specifier, " link="V_option__9">&lt;V&gt;</a><a hover="Is the number of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="n__2">&lt;n&gt;</a><text>, </text><a hover="For the single-precision and double-precision variant: is the name of the second SIMD&amp;amp;FP source register, encoded in the &quot;M:Rm&quot; fields." link="M_Rm">&lt;Vm&gt;</a><text>.</text><a hover="Is an element size specifier, " link="Ts_option__6">&lt;Ts&gt;</a><text>[</text><a hover="For the single-precision and double-precision variant: is the element index, " link="index_option__2">&lt;index&gt;</a><text>]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asisdelem.FMUL_asisdelem_R_SD" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">constant integer idxdsize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
integer index;
constant bit Rmhi = M;
case sz:L of
    when '0x' index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H:L);
    when '10' index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
    when '11' UNDEFINED;

constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rmhi:Rm);

constant integer esize = 32 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(sz);
constant integer datasize = esize;
constant integer elements = 1;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Vector, half-precision" oneof="4" id="iclass_vector_half_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-reguse" value="2reg-element"/>
        <docvar key="datatype" value="half"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMUL"/>
        <docvar key="reguse-datatype" value="2reg-element-half"/>
      </docvars>
      <iclassintro count="1"/>
      <arch_variants>
        <arch_variant feature="FEAT_FP16" name="ARMv8.2"/>
      </arch_variants>
      <regdiagram form="32" psname="A64.simd_dp.asimdelem.FMUL_asimdelem_RH_H" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="30" width="1" name="Q" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="23" width="2" name="size" usename="1" settings="2" psbits="xx">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="21" width="1" name="L" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="20" width="1" name="M" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="19" width="4" name="Rm" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="15" width="4" name="opcode" usename="1" settings="4" psbits="xxxx">
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="11" width="1" name="H" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMUL_asimdelem_RH_H" oneofinclass="1" oneof="4" label="">
        <docvars>
          <docvar key="datatype" value="half"/>
          <docvar key="isa" value="A64"/>
          <docvar key="mnemonic" value="FMUL"/>
          <docvar key="advsimd-reguse" value="2reg-element"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="reguse-datatype" value="2reg-element-half"/>
        </docvars>
        <asmtemplate><text>FMUL  </text><a hover="Is the name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Vd">&lt;Vd&gt;</a><text>.</text><a hover="For the half-precision variant: is an arrangement specifier, " link="T_option__4">&lt;T&gt;</a><text>, </text><a hover="Is the name of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Vn__2">&lt;Vn&gt;</a><text>.</text><a hover="For the half-precision variant: is an arrangement specifier, " link="T_option__4">&lt;T&gt;</a><text>, </text><a hover="For the half-precision variant: is the name of the second SIMD&amp;amp;FP source register, in the range V0 to V15, encoded in the &quot;Rm&quot; field." link="Vm__2">&lt;Vm&gt;</a><text>.H[</text><a hover="For the half-precision variant: is the element index, in the range 0 to 7, encoded in the &quot;H:L:M&quot; fields." link="index__8">&lt;index&gt;</a><text>]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asimdelem.FMUL_asimdelem_RH_H" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !IsFeatureImplemented(FEAT_FP16) then UNDEFINED;

constant integer idxdsize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rm);
constant integer index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H:L:M);

constant integer esize = 16;
constant integer datasize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Q);
constant integer elements = datasize DIV esize;</pstext></ps>
      </ps_section>
    </iclass>
    <iclass name="Vector, single-precision and double-precision" oneof="4" id="iclass_vector_single_precision_and_double_precision" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="advsimd-reguse" value="2reg-element"/>
        <docvar key="datatype" value="single-and-double"/>
        <docvar key="instr-class" value="advsimd"/>
        <docvar key="isa" value="A64"/>
        <docvar key="mnemonic" value="FMUL"/>
        <docvar key="reguse-datatype" value="2reg-element-single-and-double"/>
      </docvars>
      <iclassintro count="1"/>
      <regdiagram form="32" psname="A64.simd_dp.asimdelem.FMUL_asimdelem_R_SD" tworows="1">
        <box hibit="31" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="30" width="1" name="Q" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="29" name="U" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="28" width="6" settings="6">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="22" width="1" name="sz" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="21" width="1" name="L" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="20" width="1" name="M" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="19" width="4" name="Rm" usename="1">
          <c colspan="4"/>
        </box>
        <box hibit="15" width="4" name="opcode" usename="1" settings="4" psbits="xxxx">
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="11" width="1" name="H" usename="1">
          <c colspan="1"/>
        </box>
        <box hibit="10" width="1" settings="1">
          <c>0</c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"/>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"/>
        </box>
      </regdiagram>
      <encoding name="FMUL_asimdelem_R_SD" oneofinclass="1" oneof="4" label="">
        <docvars>
          <docvar key="isa" value="A64"/>
          <docvar key="datatype" value="single-and-double"/>
          <docvar key="mnemonic" value="FMUL"/>
          <docvar key="advsimd-reguse" value="2reg-element"/>
          <docvar key="instr-class" value="advsimd"/>
          <docvar key="reguse-datatype" value="2reg-element-single-and-double"/>
        </docvars>
        <asmtemplate><text>FMUL  </text><a hover="Is the name of the SIMD&amp;amp;FP destination register, encoded in the &quot;Rd&quot; field." link="Vd">&lt;Vd&gt;</a><text>.</text><a hover="For the single-precision and double-precision variant: is an arrangement specifier, " link="T_option__26">&lt;T&gt;</a><text>, </text><a hover="Is the name of the first SIMD&amp;amp;FP source register, encoded in the &quot;Rn&quot; field." link="Vn__2">&lt;Vn&gt;</a><text>.</text><a hover="For the single-precision and double-precision variant: is an arrangement specifier, " link="T_option__26">&lt;T&gt;</a><text>, </text><a hover="For the single-precision and double-precision variant: is the name of the second SIMD&amp;amp;FP source register, encoded in the &quot;M:Rm&quot; fields." link="M_Rm">&lt;Vm&gt;</a><text>.</text><a hover="Is an element size specifier, " link="Ts_option__6">&lt;Ts&gt;</a><text>[</text><a hover="For the single-precision and double-precision variant: is the element index, " link="index_option__2">&lt;index&gt;</a><text>]</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="A64.simd_dp.asimdelem.FMUL_asimdelem_R_SD" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">constant integer idxdsize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
integer index;
constant bit Rmhi = M;
case sz:L of
    when '0x' index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H:L);
    when '10' index = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(H);
    when '11' UNDEFINED;

constant integer d = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rd);
constant integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rn);
constant integer m = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Rmhi:Rm);

if sz:Q == '10' then UNDEFINED;
constant integer esize = 32 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(sz);
constant integer datasize = 64 &lt;&lt; <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Q);
constant integer elements = datasize DIV esize;</pstext></ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="FMUL_asisdelem_RH_H" symboldefcount="1">
      <symbol link="Hd">&lt;Hd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 16-bit name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_RH_H" symboldefcount="1">
      <symbol link="Hn">&lt;Hn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 16-bit name of the first SIMD&amp;FP source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_RH_H, FMUL_asimdelem_RH_H" symboldefcount="1">
      <symbol link="Vm__2">&lt;Vm&gt;</symbol>
      <account encodedin="Rm">
        <intro>
          <para>For the half-precision variant: is the name of the second SIMD&amp;FP source register, in the range V0 to V15, encoded in the "Rm" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD, FMUL_asimdelem_R_SD" symboldefcount="2">
      <symbol link="M_Rm">&lt;Vm&gt;</symbol>
      <account encodedin="M:Rm">
        <intro>
          <para>For the single-precision and double-precision variant: is the name of the second SIMD&amp;FP source register, encoded in the "M:Rm" fields.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_RH_H, FMUL_asimdelem_RH_H" symboldefcount="1">
      <symbol link="index__8">&lt;index&gt;</symbol>
      <account encodedin="H:L:M">
        <intro>
          <para>For the half-precision variant: is the element index, in the range 0 to 7, encoded in the "H:L:M" fields.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD, FMUL_asimdelem_R_SD" symboldefcount="2">
      <symbol link="index_option__2">&lt;index&gt;</symbol>
      <definition encodedin="sz:L:H">
        <intro>For the single-precision and double-precision variant: is the element index, </intro>
        <table class="valuetable">
          <tgroup cols="3">
            <thead>
              <row>
                <entry class="bitfield">sz</entry>
                <entry class="bitfield">L</entry>
                <entry class="symbol">&lt;index&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="bitfield">x</entry>
                <entry class="symbol">UInt(H:L)</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">0</entry>
                <entry class="symbol">UInt(H)</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">1</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD" symboldefcount="1">
      <symbol link="V_option__9">&lt;V&gt;</symbol>
      <definition encodedin="sz">
        <intro>Is a width specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">sz</entry>
                <entry class="symbol">&lt;V&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="symbol">S</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="symbol">D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD" symboldefcount="1">
      <symbol link="d">&lt;d&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the number of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD" symboldefcount="1">
      <symbol link="n__2">&lt;n&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the number of the first SIMD&amp;FP source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asisdelem_R_SD, FMUL_asimdelem_R_SD" symboldefcount="1">
      <symbol link="Ts_option__6">&lt;Ts&gt;</symbol>
      <definition encodedin="sz">
        <intro>Is an element size specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">sz</entry>
                <entry class="symbol">&lt;Ts&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="symbol">S</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="symbol">D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMUL_asimdelem_RH_H, FMUL_asimdelem_R_SD" symboldefcount="1">
      <symbol link="Vd">&lt;Vd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the name of the SIMD&amp;FP destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="FMUL_asimdelem_RH_H" symboldefcount="1">
      <symbol link="T_option__4">&lt;T&gt;</symbol>
      <definition encodedin="Q">
        <intro>For the half-precision variant: is an arrangement specifier, </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">Q</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="symbol">4H</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="symbol">8H</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMUL_asimdelem_R_SD" symboldefcount="2">
      <symbol link="T_option__26">&lt;T&gt;</symbol>
      <definition encodedin="Q:sz">
        <intro>For the single-precision and double-precision variant: is an arrangement specifier, </intro>
        <table class="valuetable">
          <tgroup cols="3">
            <thead>
              <row>
                <entry class="bitfield">Q</entry>
                <entry class="bitfield">sz</entry>
                <entry class="symbol">&lt;T&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="bitfield">0</entry>
                <entry class="symbol">2S</entry>
              </row>
              <row>
                <entry class="bitfield">0</entry>
                <entry class="bitfield">1</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">0</entry>
                <entry class="symbol">4S</entry>
              </row>
              <row>
                <entry class="bitfield">1</entry>
                <entry class="bitfield">1</entry>
                <entry class="symbol">2D</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="FMUL_asimdelem_RH_H, FMUL_asimdelem_R_SD" symboldefcount="1">
      <symbol link="Vn__2">&lt;Vn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the name of the first SIMD&amp;FP source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="A64.simd_dp.asisdelem.FMUL_asisdelem_RH_H" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="impl-aarch64.CheckFPAdvSIMDEnabled64.0" file="shared_pseudocode.xml" hover="function: CheckFPAdvSIMDEnabled64()">CheckFPAdvSIMDEnabled64</a>();
constant bits(datasize) operand1 = <a link="impl-aarch64.V.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) V[integer n, ESize width]">V</a>[n, datasize];
constant bits(idxdsize) operand2 = <a link="impl-aarch64.V.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) V[integer n, ESize width]">V</a>[m, idxdsize];
bits(esize) element1;
constant bits(esize) element2 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[operand2, index, esize];

constant boolean merge = elements == 1 &amp;&amp; <a link="impl-shared.IsMerging.1" file="shared_pseudocode.xml" hover="function: boolean IsMerging(FPCR_Type fpcr)">IsMerging</a>(FPCR);
bits(128) result = if merge then <a link="impl-aarch64.V.read.2" file="shared_pseudocode.xml" hover="accessor: bits(width) V[integer n, ESize width]">V</a>[n, 128] else <a link="impl-shared.Zeros.1" file="shared_pseudocode.xml" hover="function: bits(N) Zeros(integer N)">Zeros</a>(128);

for e = 0 to elements-1
    element1 = <a link="impl-shared.Elem.read.3" file="shared_pseudocode.xml" hover="accessor: bits(size) Elem[bits(N) vector, integer e, integer size]">Elem</a>[operand1, e, esize];
    <a link="impl-shared.Elem.write.3" file="shared_pseudocode.xml" hover="accessor: Elem[bits(N) &amp;vector, integer e, integer size] = bits(size) value">Elem</a>[result, e, esize] = <a link="impl-shared.FPMul.3" file="shared_pseudocode.xml" hover="function: bits(N) FPMul(bits(N) op1, bits(N) op2, FPCR_Type fpcr)">FPMul</a>(element1, element2, FPCR);

<a link="impl-aarch64.V.write.2" file="shared_pseudocode.xml" hover="accessor: V[integer n, ESize width] = bits(width) value">V</a>[d, 128] = result;</pstext></ps>
  </ps_section>
</instructionsection>
